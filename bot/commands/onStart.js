import db from "../../db";
import { reportError } from "../../utils";

export default async function onStart(ctx) {
  try {
    if (!ctx.startPayload) {
      ctx.reply("–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Äüßê /start {–ø–∞—Ä–∞–º–µ—Ç—Ä}");
      return;
    }

    ctx.reply("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—èüïë");

    await db.connect();

    const user = await db.user.findOne({ id: ctx.startPayload });

    if (!user) {
      ctx.reply("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–ºü§∑");
      return;
    }

    const chat = user.telegram_chat_ids.find(
      (chat_id) => chat_id === ctx.message.chat.id
    );

    if (chat) {
      ctx.reply(`${user.name}, –≤—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüòé`);
      return;
    }

    user.telegram_chat_ids.push(ctx.message.chat.id);

    await user.save();

    ctx.reply(`${user.name}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüòé`);
  } catch (err) {
    await reportError("START", err);
  }
}
